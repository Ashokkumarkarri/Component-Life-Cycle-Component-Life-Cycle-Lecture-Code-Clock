{"version":3,"sources":["components/Clock/index.js","App.js","index.js"],"names":["Clock","props","tick","setState","date","Date","state","console","log","this","timerId","setInterval","clearInterval","className","toLocaleTimeString","Component","App","showclock","onTOggleClock","prevState","type","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAwCeA,E,kDApCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkBRC,KAAO,WACL,EAAKC,SAAS,CAACC,KAAM,IAAIC,QAlBzB,EAAKC,MAAQ,CAACF,KAAM,IAAIC,MACxBE,QAAQC,IAAI,sBAHK,E,qDAOnB,WACED,QAAQC,IAAI,8BAEZC,KAAKC,QAAUC,YAAYF,KAAKP,KAAM,O,kCAGxC,WAEEK,QAAQC,IAAI,+BACZI,cAAcH,KAAKC,W,oBAQrB,WAAU,IACDN,EAAQK,KAAKH,MAAbF,KAEP,OADAG,QAAQC,IAAI,gBAAiBJ,GAE3B,sBAAKS,UAAU,kBAAf,UACE,oBAAIA,UAAU,UAAd,mBACA,mBAAGA,UAAU,OAAb,SAAqBT,EAAKU,uBAA0B,W,GA/BxCC,aC6BLC,G,kNA1BbV,MAAQ,CAACW,WAAW,G,EAEpBC,cAAgB,WACd,EAAKf,UAAS,SAAAgB,GAEZ,MAAO,CAACF,WADYE,EAAbF,e,4CAKX,WAAU,IACDA,EAAaR,KAAKH,MAAlBW,UACP,OACE,sBAAKJ,UAAU,gBAAf,UACE,wBACEO,KAAK,SACLP,UAAU,gBACVQ,QAASZ,KAAKS,cAHhB,SAKGD,EAAY,aAAe,eAE7BA,GAAa,cAAC,EAAD,W,GArBJF,cCDlBO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d1ae36e9.chunk.js","sourcesContent":["import {Component} from 'react'\nimport './index.css'\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props) // Must call super(props) before using 'this' in constructor\n    this.state = {date: new Date()}\n    console.log('Constructor called')\n  }\n\n  // This method runs once after the component is mounted (inserted into the DOM)\n  componentDidMount() {\n    console.log('component DIDMount called ')\n    // Setting up an interval to update time every second\n    this.timerId = setInterval(this.tick, 1000)\n  }\n\n  componentWillUnmount() {\n    // This lifecycle method is called right before the component is removed from the DOM\n    console.log('componentWillUnmount called') // Log when unmounting happens\n    clearInterval(this.timerId) // Clear the interval to prevent memory leaks\n  }\n\n  tick = () => {\n    this.setState({date: new Date()}) // This method updates the state with current time every second\n  }\n\n  // This method is called whenever the component re-renders (due to state or props change)\n  render() {\n    const {date} = this.state // Destructuring date from state\n    console.log('render called', date) // Log current render time\n    return (\n      <div className=\"clock-container\">\n        <h1 className=\"heading\">Clock</h1>\n        <p className=\"time\">{date.toLocaleTimeString()}</p>{' '}\n      </div>\n    )\n  }\n}\n\nexport default Clock\n\n// There are 3 key lifecycle methods in the mounting phase:\n// 1. constructor()\n// 2. render()\n// 3. componentDidMount()\n","import {Component} from 'react'\nimport Clock from './components/Clock'\n\nimport './App.css'\n\nclass App extends Component {\n  state = {showclock: false}\n\n  onTOggleClock = () => {\n    this.setState(prevState => {\n      const {showclock} = prevState\n      return {showclock: !showclock}\n    })\n  }\n\n  render() {\n    const {showclock} = this.state\n    return (\n      <div className=\"app-container\">\n        <button\n          type=\"button\"\n          className=\"toggle-button\"\n          onClick={this.onTOggleClock}\n        >\n          {showclock ? 'Hide Clock' : 'Show Clock'}\n        </button>\n        {showclock && <Clock />}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}